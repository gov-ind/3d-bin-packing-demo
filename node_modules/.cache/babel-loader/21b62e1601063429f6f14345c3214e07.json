{"ast":null,"code":"var _jsxFileName = \"/home/gov/projects/three/src/threedloadplan/panel/AWBListItem.js\";\nimport React from 'react';\nexport default (({\n  awb: {\n    shipmentPrefix,\n    masterDocumentNumber,\n    items,\n    sccs\n  },\n  dimensions\n}) => React.createElement(\"div\", {\n  className: \"awb-item\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"awb-item-top\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"awb-number-wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"b\", {\n  className: \"awb-number\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, shipmentPrefix + '-' + masterDocumentNumber), React.createElement(\"div\", {\n  className: \"awb-scc\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, sccs && Array.isArray(sccs) && sccs.length > 0 && sccs[0])), React.createElement(\"div\", {\n  className: \"awb-item-header-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"b\", {\n  className: \"position-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"POS\"), React.createElement(\"b\", {\n  className: \"dimension-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"L x B x H (cm)\"), React.createElement(\"b\", {\n  className: \"loaded-container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Loaded\"))), items && items.map(item => {\n  const dimension = dimensions[item];\n  const plannedPieces = dimension.plannedPieces,\n        plannedWeight = dimension.plannedWeight,\n        plannedVolume = dimension.plannedVolume,\n        length = dimension.length,\n        breadth = dimension.breadth,\n        height = dimension.height,\n        position = dimension.position;\n  return React.createElement(\"div\", {\n    className: \"dimension-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"dimension-details-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, plannedPieces, \" pcs |\", '  ', plannedWeight.displayValue + ' ' + plannedWeight.displayUnit, \" |\", '  ', plannedVolume.displayValue.toFixed(2) + ' ' + plannedVolume.displayUnit), React.createElement(\"div\", {\n    className: \"awb-item-header-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"position-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, position), React.createElement(\"span\", {\n    className: \"dimension-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, length, \" x \", breadth, \" x \", height), React.createElement(\"span\", {\n    className: \"loaded-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"margin-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n})));","map":{"version":3,"sources":["/home/gov/projects/three/src/threedloadplan/panel/AWBListItem.js"],"names":["React","awb","shipmentPrefix","masterDocumentNumber","items","sccs","dimensions","Array","isArray","length","map","item","dimension","plannedPieces","plannedWeight","plannedVolume","breadth","height","position","displayValue","displayUnit","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nexport default ({\r\n  awb: {\r\n    shipmentPrefix,\r\n    masterDocumentNumber,\r\n    items,\r\n    sccs\r\n  },\r\n  dimensions\r\n}) => \r\n  <div className='awb-item'>\r\n    <div className='awb-item-top'>\r\n      <div className='awb-number-wrapper'>\r\n        <b className='awb-number'>{shipmentPrefix + '-' + masterDocumentNumber}</b>\r\n        <div className='awb-scc'>\r\n          {sccs && Array.isArray(sccs) && sccs.length > 0 && sccs[0]}\r\n        </div>\r\n      </div>\r\n      <div className='awb-item-header-container'>\r\n        <b className='position-container'>POS</b>\r\n        <b className='dimension-container'>L x B x H (cm)</b>\r\n        <b className='loaded-container'>Loaded</b>\r\n      </div>\r\n    </div>\r\n    {items && items.map(item => {\r\n      const dimension = dimensions[item];\r\n      const {\r\n        plannedPieces,\r\n        plannedWeight,\r\n        plannedVolume,\r\n        length,\r\n        breadth,\r\n        height,\r\n        position\r\n      } = dimension;\r\n\r\n      return (\r\n        <div className='dimension-wrapper'>\r\n          <span className='dimension-details-wrapper'>\r\n            {plannedPieces} pcs |\r\n            {'  '}{plannedWeight.displayValue + ' ' + plannedWeight.displayUnit} |\r\n            {'  '}{plannedVolume.displayValue.toFixed(2) + ' ' + plannedVolume.displayUnit}\r\n          </span>\r\n          <div className='awb-item-header-container'>\r\n            <span className='position-container'>{position}</span>\r\n            <span className='dimension-container'>{length} x {breadth} x {height}</span>\r\n            <span className='loaded-container'>\r\n              <input type='checkbox' className='margin-right' />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    })}\r\n  </div>"]},"metadata":{},"sourceType":"module"}