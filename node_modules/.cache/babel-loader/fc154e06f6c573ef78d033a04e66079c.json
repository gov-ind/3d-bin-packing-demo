{"ast":null,"code":"/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * A LightProbe is a source of indirect-diffuse light\n */\nimport { SphericalHarmonics3 } from '../math/SphericalHarmonics3.js';\nimport { Light } from './Light.js';\n\nfunction LightProbe(sh, intensity) {\n  Light.call(this, undefined, intensity);\n  this.sh = sh !== undefined ? sh : new SphericalHarmonics3();\n}\n\nLightProbe.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: LightProbe,\n  isLightProbe: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.sh.copy(source.sh);\n    this.intensity = source.intensity;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Light.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n    return data;\n  }\n});\nexport { LightProbe };","map":null,"metadata":{},"sourceType":"module"}