{"ast":null,"code":"/**\n * @author WestLangley / http://github.com/WestLangley\n */\nimport { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LightProbe } from './LightProbe.js';\n\nfunction HemisphereLightProbe(skyColor, groundColor, intensity) {\n  LightProbe.call(this, undefined, intensity);\n  var color1 = new Color().set(skyColor);\n  var color2 = new Color().set(groundColor);\n  var sky = new Vector3(color1.r, color1.g, color1.b);\n  var ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n  var c0 = Math.sqrt(Math.PI);\n  var c1 = c0 * Math.sqrt(0.75);\n  this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n  this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n}\n\nHemisphereLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n  constructor: HemisphereLightProbe,\n  isHemisphereLightProbe: true,\n  copy: function (source) {\n    // modifying colors not currently supported\n    LightProbe.prototype.copy.call(this, source);\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n    return data;\n  }\n});\nexport { HemisphereLightProbe };","map":null,"metadata":{},"sourceType":"module"}