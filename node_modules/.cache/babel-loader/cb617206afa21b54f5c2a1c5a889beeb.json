{"ast":null,"code":"import _slicedToArray from \"/home/gov/projects/three/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/gov/projects/three/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/gov/projects/three/src/threedloadplan/panel/ThreeScene.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport * as THREE from 'three/src/Three';\nimport { Canvas, extend, useThree } from 'react-three-fiber';\nimport OrbitControls from 'three-orbitcontrols';\nimport d from './data.json';\nimport shape from '../shape.json';\nextend({\n  OrbitControls\n});\nconst camera = {\n  position: new THREE.Vector3(0, 0, 250)\n};\nconst style = {\n  width: 800,\n  height: 800\n};\nconst plain = new THREE.MeshBasicMaterial({\n  map: new THREE.TextureLoader().load('images/crate.png')\n});\nconst untiltable = new THREE.MeshBasicMaterial({\n  map: new THREE.TextureLoader().load('images/crate_untiltable.png')\n});\nconst unstackable = new THREE.MeshBasicMaterial({\n  map: new THREE.TextureLoader().load('images/crate_unstackable.png')\n});\nlet numberOfHeaviestItemsToPackFromCenter = 15;\n\nconst getCornerCoordOfItemInBin = (bin, item) => ({\n  x: bin.cornerCoord.x + item.l / 2,\n  y: bin.cornerCoord.y + item.b / 2,\n  z: bin.cornerCoord.z + item.h / 2\n});\n\nconst splitBinByLength = (bin, item) => ({\n  x: item.l / 2,\n  y: 0,\n  z: 0,\n  l: bin.l - item.l,\n  b: bin.b,\n  h: bin.h,\n  color: '#CECECE',\n  cornerCoord: {\n    x: bin.cornerCoord.x + item.l,\n    y: bin.cornerCoord.y,\n    z: bin.cornerCoord.z\n  },\n  type: 'l',\n  reservedForHeavyItems: bin.reservedForHeavyItems\n});\n\nconst splitBinByHeight = (bin, item) => ({\n  x: -bin.l / 2 + item.l / 2,\n  y: 0,\n  z: item.h / 2,\n  l: item.l,\n  b: bin.b,\n  h: bin.h - item.h,\n  color: '#000',\n  cornerCoord: {\n    x: bin.cornerCoord.x,\n    y: bin.cornerCoord.y,\n    z: bin.cornerCoord.z + item.h\n  },\n  type: 'h',\n  reservedForHeavyItems: bin.reservedForHeavyItems\n});\n\nconst splitBinByBreadth = (bin, item) => ({\n  x: -bin.l / 2 + item.l / 2,\n  y: item.b / 2,\n  z: -bin.h / 2 + item.h / 2,\n  l: item.l,\n  b: bin.b - item.b,\n  h: item.h,\n  color: '#000',\n  cornerCoord: {\n    x: bin.cornerCoord.x,\n    y: bin.cornerCoord.y + item.b,\n    z: bin.cornerCoord.z\n  },\n  type: 'b',\n  reservedForHeavyItems: bin.reservedForHeavyItems\n});\n\nconst createSubBins = (bin, item) => [splitBinByLength(bin, item), splitBinByHeight(bin, item), splitBinByBreadth(bin, item)];\n\nconst theBin = {\n  l: 244,\n  b: 163,\n  h: 163,\n  cornerCoord: {\n    x: -244 / 2,\n    y: -163 / 2,\n    z: -163 / 2\n  }\n};\nconst binsForHeaviestFromMiddle = [{\n  // left\n  x: -244 / 2 + 80 / 2,\n  y: 0,\n  z: 0,\n  l: 80,\n  b: 163,\n  h: 163,\n  cornerCoord: {\n    x: -244 / 2,\n    y: -163 / 2,\n    z: -163 / 2\n  },\n  color: 'red'\n}, {\n  // middle\n  x: 0,\n  y: 0,\n  z: 0,\n  l: 84,\n  b: 163,\n  h: 83,\n  cornerCoord: {\n    x: -244 / 2 + 80,\n    y: -163 / 2,\n    z: -163 / 2 + 40\n  },\n  color: 'red',\n  reservedForHeavyItems: true\n}, {\n  // right\n  x: -244 / 2 + 80 / 2 + 80 + 84,\n  y: 0,\n  z: 0,\n  l: 80,\n  b: 163,\n  h: 163,\n  cornerCoord: {\n    x: -244 / 2 + 80 + 84,\n    y: -163 / 2,\n    z: -163 / 2\n  },\n  color: 'red'\n}, {\n  // back\n  x: 0,\n  y: 0,\n  z: -163 / 2 + 40 / 2,\n  l: 84,\n  b: 163,\n  h: 40,\n  cornerCoord: {\n    x: -244 / 2 + 80,\n    y: -163 / 2,\n    z: -163 / 2\n  },\n  color: 'red'\n}, {\n  // front\n  x: 0,\n  y: 0,\n  z: 163 / 2 - 40 / 2,\n  l: 84,\n  b: 163,\n  h: 40,\n  cornerCoord: {\n    x: -244 / 2 + 80,\n    y: -163 / 2,\n    z: -163 / 2 + 40 + 83\n  },\n  color: 'red'\n}];\n\nconst createInitialBins = strategy => {\n  if (strategy === 1) {\n    // heaviest from middle\n    return binsForHeaviestFromMiddle;\n  } else {\n    numberOfHeaviestItemsToPackFromCenter = -1;\n    return [{\n      l: 244,\n      b: 163,\n      h: 163,\n      cornerCoord: {\n        x: -244 / 2,\n        y: -163 / 2,\n        z: -163 / 2\n      }\n    }];\n  }\n};\n\nlet bins = createInitialBins(1);\nwindow.bins = bins;\nlet items = [{\n  l: 40,\n  b: 45,\n  h: 46\n}];\n\nconst spinItem = (item, axis = 1) => {\n  let tmp;\n  unspinItem(item);\n\n  if (axis === 1) {\n    tmp = item.l;\n    item.l = item.b;\n    item.b = tmp;\n  } else if (axis === 2) {\n    tmp = item.b;\n    item.b = item.h;\n    item.h = tmp;\n  } else if (axis === 3) {\n    tmp = item.l;\n    item.l = item.h;\n    item.h = tmp;\n  }\n\n  item.axis = axis;\n};\n\nconst unspinItem = item => {\n  let tmp;\n\n  if (item.axis === 1) {\n    tmp = item.l;\n    item.l = item.b;\n    item.b = tmp;\n  } else if (item.axis === 2) {\n    tmp = item.b;\n    item.b = item.h;\n    item.h = tmp;\n  } else if (item.axis === 3) {\n    tmp = item.l;\n    item.l = item.h;\n    item.h = tmp;\n  }\n\n  item.axis = 0;\n};\n\nconst doesItemFitInBin = (bin, item) => item.l <= bin.l && item.b <= bin.b && item.h <= bin.h;\n\nconst pack = items => {\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n\n    for (let j = 0; j < bins.length; j++) {\n      const bin = bins[j];\n      if (item.packed) break;\n      if (!bin) continue;\n\n      if (numberOfHeaviestItemsToPackFromCenter !== -1) {\n        if (i <= numberOfHeaviestItemsToPackFromCenter && //!items.filter(_ => !_.packed && _.heavy).length === 0 ||\n        bin.reservedForHeavyItems && !item.heavy || !bin.reservedForHeavyItems && item.heavy) continue;\n      }\n\n      console.log('Attempt to fit item ' + item.id + ' into bin ' + j + ' ' + bin.type);\n\n      if (doesItemFitInBin(bin, item)) {\n        console.log('succeeded');\n        packItem(bin, j, item);\n      } else if (item.spinnable) {\n        console.log('failed, trying with spin 1');\n        spinItem(item, 1);\n\n        if (doesItemFitInBin(bin, item)) {\n          console.log('succeeded');\n          packItem(bin, j, item);\n        } else {\n          console.log('failed, trying with spin 2');\n          spinItem(item, 2);\n\n          if (doesItemFitInBin(bin, item)) {\n            console.log('succeeded');\n            packItem(bin, j, item);\n          } else {\n            console.log('failed, trying with spin 3');\n            spinItem(item, 3);\n\n            if (doesItemFitInBin(bin, item)) {\n              console.log('succeeded');\n              packItem(bin, j, item);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  bins = filterAndSortBins(bins);\n  window.bins = bins;\n  return {\n    bins,\n    items\n  };\n};\n\nconst packItem = (bin, binIndex, item) => {\n  const _ = getCornerCoordOfItemInBin(bin, item);\n\n  bins.push(...createSubBins(bin, item));\n  bins[binIndex] = null;\n  item.x = _.x;\n  item.y = _.y;\n  item.z = _.z;\n  item.packed = true;\n};\n\nconst filterAndSortBins = bins => bins.filter(bin => bin && bin.l !== 0 && bin.b !== 0 && bin.h !== 0).sort((a, b) => {\n  if (a.type === 'l') return -1;\n\n  if (a.type === 'h') {\n    if (b.type === 'b') return -1;\n    return 1;\n  }\n\n  if (a.type === 'b') return 1;\n});\n\nconst sortItemsByVolume = items => items.sort((a, b) => {\n  if (a.unstackable && !b.unstackable) return 1;\n  if (b.unstackable && !a.unstackable) return -1;\n  if (a.l * a.b * a.h > b.l * b.b * b.h) return -1;\n  return 1;\n});\n\nconst putNHeaviestItemsFirst = (items, n = numberOfHeaviestItemsToPackFromCenter) => {\n  if (numberOfHeaviestItemsToPackFromCenter === -1) return items;\n  const copy = items.map((item, index) => ({\n    item,\n    index\n  })); // TODO: handle heaviest but not stackable\n\n  copy.sort((a, b) => {\n    if (a.item.unstackable) {\n      return 1;\n    }\n\n    if (a.item.weight > b.item.weight) return -1;\n    return 1;\n  });\n\n  for (let i = 0; i < n; i++) {\n    items[copy[i].index] = null;\n  }\n\n  return copy.map(_ => _objectSpread({}, _.item, {\n    heavy: true\n  })).slice(0, n).concat(items.filter(_ => _));\n};\n\nconst ULDScene = ({\n  uld,\n  dimensions,\n  items = [],\n  subBins\n}) => {\n  const _useThree = useThree(),\n        camera = _useThree.camera,\n        gl = _useThree.gl;\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, React.createElement(\"orbitControls\", {\n    args: [camera, gl.domElement],\n    enableDamping: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }), React.createElement(\"group\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, uld.contour.faces.map(face => React.createElement(\"line\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }, React.createElement(\"geometry\", {\n    attach: \"geometry\",\n    vertices: face.points.map(point => new THREE.Vector3(point.x, point.y, point.z)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }), React.createElement(\"lineBasicMaterial\", {\n    attach: \"material\",\n    color: \"#8A8A8A\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  })))), (subBins || []).map(subBin => {\n    return React.createElement(\"mesh\", {\n      position: [subBin.x, subBin.y, subBin.z],\n      color: \"#CECECE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: [subBin.l, subBin.b, subBin.h],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }));\n  }), items.map(item => {\n    const material = item.myRotationConstraints === 7 ? untiltable : item.myPositionConstraints === 2 ? unstackable : plain;\n    return React.createElement(\"mesh\", {\n      position: [item.x, item.y, item.z],\n      material: material,\n      onClick: e => alert(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: [item.l, item.b, item.h],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), item.heavy && React.createElement(\"meshBasicMaterial\", {\n      attach: \"material\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), item.unstackable && React.createElement(\"meshBasicMaterial\", {\n      attach: \"material\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }));\n  }));\n};\n\nitems = pack(items).items;\n/*let newItems = [\r\n  {\"id\":12,\"l\":40,\"b\":37,\"h\":38,\"weight\":17.512055393515897},\r\n  {\"id\":96,\"l\":36,\"b\":38,\"h\":39,\"weight\":26.703374934395853, unstackable: true},\r\n  {\"id\":21,\"l\":36,\"b\":37,\"h\":39,\"weight\":22.691877999126895, unstackable: true},\r\n  {\"id\":35,\"l\":32,\"b\":39,\"h\":38,\"weight\":7.076429841596443, unstackable: true},\r\n  {\"id\":7,\"l\":32,\"b\":37,\"h\":37,\"weight\":25.01681973005458, unstackable: true},\r\n  {\"id\":66,\"l\":37,\"b\":32,\"h\":37,\"weight\":16.93326049314387, unstackable: true},\r\n  {\"id\":6,\"l\":25,\"b\":21,\"h\":21,\"weight\":12.980079999287524, unstackable: true},\r\n  {\"id\":60,\"l\":27,\"b\":21,\"h\":22,\"weight\":13.71305998672768, unstackable: true},\r\n  {\"id\":41,\"l\":27,\"b\":23,\"h\":21,\"weight\":19.971004273977485, unstackable: true},\r\n  {\"id\":45,\"l\":27,\"b\":24,\"h\":22,\"weight\":15.690667821632571, unstackable: true},\r\n  {\"id\":8,\"l\":27,\"b\":21,\"h\":26,\"weight\":3.741435966054032, unstackable: true},{\"id\":61,\"l\":23,\"b\":26,\"h\":25,\"weight\":18.571232311441438},{\"id\":89,\"l\":21,\"b\":35,\"h\":21,\"weight\":3.8835760272165976},{\"id\":39,\"l\":21,\"b\":24,\"h\":31,\"weight\":18.14821319246191},{\"id\":11,\"l\":26,\"b\":28,\"h\":23,\"weight\":5.91564583675988},{\"id\":38,\"l\":27,\"b\":21,\"h\":30,\"weight\":14.592157825059067},{\"id\":50,\"l\":21,\"b\":22,\"h\":38,\"weight\":29.715900582492797,\"heavy\":true},{\"id\":69,\"l\":32,\"b\":24,\"h\":23,\"weight\":17.12318864349656},{\"id\":64,\"l\":31,\"b\":25,\"h\":23,\"weight\":28.424008716024396,\"heavy\":true},{\"id\":5,\"l\":21,\"b\":25,\"h\":34,\"weight\":25.969313393902155},{\"id\":27,\"l\":36,\"b\":21,\"h\":24,\"weight\":20.262957384215298},{\"id\":90,\"l\":23,\"b\":21,\"h\":38,\"weight\":18.55234432630118},{\"id\":92,\"l\":22,\"b\":28,\"h\":30,\"weight\":9.171915053595391},{\"id\":47,\"l\":30,\"b\":22,\"h\":28,\"weight\":16.697730285722074},{\"id\":58,\"l\":22,\"b\":39,\"h\":22,\"weight\":13.47099258257317},{\"id\":73,\"l\":23,\"b\":38,\"h\":22,\"weight\":4.038086801856224},{\"id\":19,\"l\":25,\"b\":35,\"h\":22,\"weight\":14.474375699587071},{\"id\":63,\"l\":28,\"b\":28,\"h\":25,\"weight\":23.184998954408425},{\"id\":18,\"l\":28,\"b\":32,\"h\":22,\"weight\":11.364336818339147},{\"id\":70,\"l\":25,\"b\":25,\"h\":32,\"weight\":14.57784845840147},{\"id\":97,\"l\":23,\"b\":22,\"h\":40,\"weight\":3.2404087035059748},{\"id\":0,\"l\":22,\"b\":26,\"h\":36,\"weight\":16.093665484613155},{\"id\":20,\"l\":32,\"b\":28,\"h\":23,\"weight\":6.105939599542991},{\"id\":94,\"l\":27,\"b\":35,\"h\":22,\"weight\":4.415246868746678},{\"id\":9,\"l\":27,\"b\":23,\"h\":34,\"weight\":1.946753195940969},{\"id\":93,\"l\":31,\"b\":22,\"h\":32,\"weight\":21.50995442856736},{\"id\":2,\"l\":27,\"b\":27,\"h\":30,\"weight\":17.667366202642995},{\"id\":71,\"l\":27,\"b\":33,\"h\":25,\"weight\":15.75517438921587},{\"id\":76,\"l\":21,\"b\":28,\"h\":38,\"weight\":7.429303206362379},{\"id\":49,\"l\":24,\"b\":24,\"h\":39,\"weight\":11.478326197037989},{\"id\":78,\"l\":22,\"b\":38,\"h\":27,\"weight\":18.455676524076893},{\"id\":88,\"l\":26,\"b\":35,\"h\":25,\"weight\":0.9699530053335081},{\"id\":33,\"l\":34,\"b\":21,\"h\":32,\"weight\":24.239957400704938},{\"id\":86,\"l\":25,\"b\":23,\"h\":40,\"weight\":18.09549907898296},{\"id\":4,\"l\":37,\"b\":24,\"h\":26,\"weight\":9.487921863035343},{\"id\":81,\"l\":25,\"b\":30,\"h\":31,\"weight\":9.139865840818096},{\"id\":43,\"l\":30,\"b\":26,\"h\":30,\"weight\":24.26232930816665},{\"id\":68,\"l\":28,\"b\":35,\"h\":24,\"weight\":9.005780799160242},{\"id\":84,\"l\":37,\"b\":22,\"h\":29,\"weight\":0.6178611192579386},{\"id\":77,\"l\":32,\"b\":34,\"h\":22,\"weight\":18.64229377819448},{\"id\":53,\"l\":35,\"b\":30,\"h\":23,\"weight\":26.496847353834493},{\"id\":56,\"l\":33,\"b\":31,\"h\":24,\"weight\":29.59836014297159,\"heavy\":true},{\"id\":74,\"l\":30,\"b\":35,\"h\":24,\"weight\":8.960694713923294},{\"id\":28,\"l\":34,\"b\":34,\"h\":22,\"weight\":15.369934327427465},{\"id\":3,\"l\":34,\"b\":27,\"h\":28,\"weight\":18.701171432157967},{\"id\":30,\"l\":37,\"b\":28,\"h\":25,\"weight\":15.077440069070096},{\"id\":46,\"l\":40,\"b\":24,\"h\":27,\"weight\":3.6163665769692144},{\"id\":67,\"l\":35,\"b\":24,\"h\":31,\"weight\":7.771779026714247},{\"id\":24,\"l\":35,\"b\":24,\"h\":31,\"weight\":25.270931113697404},{\"id\":23,\"l\":31,\"b\":30,\"h\":29,\"weight\":26.11981924304361},{\"id\":40,\"l\":39,\"b\":24,\"h\":29,\"weight\":0.16539321499317472},{\"id\":95,\"l\":35,\"b\":29,\"h\":27,\"weight\":17.64554744051333},{\"id\":42,\"l\":25,\"b\":38,\"h\":29,\"weight\":12.175004168843515},{\"id\":14,\"l\":28,\"b\":38,\"h\":26,\"weight\":11.61484399237407},{\"id\":65,\"l\":36,\"b\":37,\"h\":21,\"weight\":19.21840474585028},{\"id\":57,\"l\":27,\"b\":37,\"h\":28,\"weight\":26.63980839091846},{\"id\":16,\"l\":28,\"b\":35,\"h\":29,\"weight\":9.483466791065275},{\"id\":1,\"l\":33,\"b\":32,\"h\":27,\"weight\":10.8357904803525},{\"id\":37,\"l\":25,\"b\":36,\"h\":32,\"weight\":28.51016057956189,\"heavy\":true},{\"id\":79,\"l\":33,\"b\":34,\"h\":26,\"weight\":0.5838271763078984},{\"id\":83,\"l\":36,\"b\":22,\"h\":37,\"weight\":3.056265603933983},{\"id\":51,\"l\":33,\"b\":34,\"h\":28,\"weight\":26.309137613438892},{\"id\":85,\"l\":31,\"b\":32,\"h\":32,\"weight\":14.350839133465891},{\"id\":98,\"l\":30,\"b\":37,\"h\":29,\"weight\":11.61732623812642},{\"id\":82,\"l\":35,\"b\":40,\"h\":23,\"weight\":23.706833725894324},{\"id\":72,\"l\":29,\"b\":29,\"h\":39,\"weight\":29.30913974926043,\"heavy\":true},{\"id\":91,\"l\":29,\"b\":30,\"h\":38,\"weight\":3.5865122975081265},{\"id\":52,\"l\":35,\"b\":26,\"h\":37,\"weight\":4.839286663491098},{\"id\":13,\"l\":37,\"b\":24,\"h\":38,\"weight\":17.657981490529153},{\"id\":75,\"l\":32,\"b\":36,\"h\":30,\"weight\":8.687703545766501},{\"id\":55,\"l\":36,\"b\":37,\"h\":26,\"weight\":22.48762302159906},{\"id\":99,\"l\":38,\"b\":38,\"h\":24,\"weight\":19.741663999555584},{\"id\":31,\"l\":32,\"b\":35,\"h\":31,\"weight\":13.00040714591772},{\"id\":36,\"l\":28,\"b\":40,\"h\":31,\"weight\":25.949981233693073},{\"id\":87,\"l\":32,\"b\":34,\"h\":32,\"weight\":15.374188710865752},{\"id\":32,\"l\":25,\"b\":38,\"h\":37,\"weight\":20.074620049181867},{\"id\":54,\"l\":34,\"b\":26,\"h\":40,\"weight\":19.532050152956128},{\"id\":48,\"l\":40,\"b\":36,\"h\":25,\"weight\":13.67986502429352},{\"id\":22,\"l\":40,\"b\":36,\"h\":25,\"weight\":27.222715994183154,\"heavy\":true},{\"id\":25,\"l\":37,\"b\":39,\"h\":26,\"weight\":9.020129036788646},{\"id\":59,\"l\":37,\"b\":40,\"h\":26,\"weight\":26.608004530686173},{\"id\":34,\"l\":37,\"b\":29,\"h\":36,\"weight\":9.62276092234049},{\"id\":15,\"l\":25,\"b\":40,\"h\":39,\"weight\":13.605066733913336},{\"id\":62,\"l\":33,\"b\":37,\"h\":32,\"weight\":6.350320915044552},{\"id\":44,\"l\":38,\"b\":39,\"h\":27,\"weight\":10.825609761402571},{\"id\":29,\"l\":38,\"b\":32,\"h\":33,\"weight\":27.38340114782676,\"heavy\":true},{\"id\":17,\"l\":30,\"b\":34,\"h\":40,\"weight\":11.063160950866195},{\"id\":10,\"l\":38,\"b\":32,\"h\":34,\"weight\":28.055240502714952,\"heavy\":true},{\"id\":80,\"l\":34,\"b\":40,\"h\":32,\"weight\":8.298644465320608},{\"id\":26,\"l\":31,\"b\":36,\"h\":39,\"weight\":27.157963021699658,\"heavy\":true}];\r\n\r\nnewItems.forEach(_ => _.spinnable = true);*/\n\nlet newItems = require('./input1/json');\n/*let newItems = Array(100).fill(true).map((_, id) => {\r\n  const d = Math.ceil(Math.random() * 30)\r\n  return {\r\n    id,\r\n    l: Math.ceil(Math.random() * 10) + 30,\r\n    b: Math.ceil(Math.random() * 10) + 30,\r\n    h: Math.ceil(Math.random() * 10) + 30,\r\n    weight: Math.random() * 30,\r\n    spinnable: true,\r\n    unstackable: Math.floor(Math.random() * 6) === 0\r\n  }\r\n});*/\n\n/*let newItems = Array(100).fill(true).map((_, id) => {\r\n  const d = Math.ceil(Math.random() * 20) + 20\r\n  return {\r\n    id,\r\n    l: d,\r\n    b: d,\r\n    h: d,\r\n    weight: Math.random() * 30,\r\n    spinnable: true\r\n  }\r\n});*/\n\n\nwindow.newItems = newItems;\n/*newItems.sort((a, b) => a.weight < b.weight ? 1 : -1)\r\n  .forEach((item, i) => {\r\n    if (i < 5) {\r\n      item.heavy = true;\r\n    }\r\n  });*/\n\nsortItemsByVolume(newItems);\ndebugger;\nnewItems = putNHeaviestItemsFirst(newItems);\nnewItems.reverse();\ndebugger; //newItems[94] = {\"id\":66,\"l\":37,\"b\":10,\"h\":50,\"weight\":16.93326049314387};\n\n/*const newItems = sortItemsByVolume(Array(200).fill(true).map(() => ({\r\n  l: Math.random() * 50,\r\n  b: Math.random() * 50,\r\n  h: Math.random() * 50,\r\n})));*/\n\nexport default (() => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ulds = _useState2[0],\n        setUlds = _useState2[1];\n  /*useEffect(() => {\r\n   debugger;\r\n    fetch('http://localhost:8080/pack', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(d)\r\n    }).then(data => {\r\n      data.json().then(data => setUlds(data))\r\n    });\r\n  }, []);*/\n\n  /*const subBins = [{\r\n    x: -122 + 40 + (244 - 40) / 2,\r\n    y: -81.5 + 45 / 2,\r\n    z: -81.5 + 163 / 2,\r\n    l: 244 - 40,\r\n    b: 45,\r\n    h: 163\r\n  }];*/\n\n\n  const _useState3 = useState(items),\n        _useState4 = _slicedToArray(_useState3, 2),\n        _items = _useState4[0],\n        setItems = _useState4[1];\n\n  const addItem = () => {\n    const nextItem = newItems.pop();\n\n    if (nextItem) {\n      let result = pack(items.concat(nextItem));\n      console.dir(result.items);\n      items = result.items;\n      setItems(result.items);\n\n      if (newItems.length > 0) {\n        setTimeout(addItem, 100);\n      }\n      /*else while (items.filter(_ => !_.packed).length !== 0) {debugger;\r\n        result = pack(items);\r\n        items = result.items;\r\n      }*/\n\n    }\n  };\n\n  const packedItems = _items.filter(_ => _.packed);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551\n    },\n    __self: this\n  }, \"Bins: \", bins.length, \"Pack status: \", packedItems.length, \" / \", _items.length, ' ', \"Occupancy: \", packedItems.reduce((acc, i) => acc + i.l * i.b * i.h, 0) / (244 * 163 * 163) * 100), shape.map(uld => React.createElement(Canvas, {\n    style: style,\n    camera: camera,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557\n    },\n    __self: this\n  }, React.createElement(ULDScene, {\n    uld: uld,\n    items: _items,\n    subBins: []\n    /*binsForHeaviestFromMiddle */\n\n    /*[\r\n    splitBinByLength(theBin, items[0]),\r\n    splitBinByBreadth(theBin, items[0]),\r\n    splitBinByHeight(theBin, items[0])\r\n    ]*/\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: addItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564\n    },\n    __self: this\n  }, \"Pack\"));\n});\n/*const splitBinByLength = (bin, item) => {\r\n  return {\r\n    x: -bin.l / 2 + item.l + (bin.l - item.l) / 2,\r\n    y: -bin.b / 2 + item.b / 2,\r\n    z: -bin.h / 2 + bin.h / 2,\r\n    l: bin.l - item.l,\r\n    b: item.b,\r\n    h: bin.h,\r\n    color: '#CECECE'\r\n  };\r\n};*/","map":{"version":3,"sources":["/home/gov/projects/three/src/threedloadplan/panel/ThreeScene.js"],"names":["React","useEffect","useState","Fragment","THREE","Canvas","extend","useThree","OrbitControls","d","shape","camera","position","Vector3","style","width","height","plain","MeshBasicMaterial","map","TextureLoader","load","untiltable","unstackable","numberOfHeaviestItemsToPackFromCenter","getCornerCoordOfItemInBin","bin","item","x","cornerCoord","l","y","b","z","h","splitBinByLength","color","type","reservedForHeavyItems","splitBinByHeight","splitBinByBreadth","createSubBins","theBin","binsForHeaviestFromMiddle","createInitialBins","strategy","bins","window","items","spinItem","axis","tmp","unspinItem","doesItemFitInBin","pack","i","length","j","packed","heavy","console","log","id","packItem","spinnable","filterAndSortBins","binIndex","_","push","filter","sort","a","sortItemsByVolume","putNHeaviestItemsFirst","n","copy","index","weight","slice","concat","ULDScene","uld","dimensions","subBins","gl","domElement","contour","faces","face","points","point","subBin","material","myRotationConstraints","myPositionConstraints","e","alert","newItems","require","reverse","ulds","setUlds","_items","setItems","addItem","nextItem","pop","result","dir","setTimeout","packedItems","reduce","acc"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\r\nimport * as THREE from 'three/src/Three';\r\nimport { Canvas, extend, useThree } from 'react-three-fiber';\r\nimport OrbitControls from 'three-orbitcontrols';\r\n\r\nimport d from './data.json';\r\nimport shape from '../shape.json';\r\n\r\nextend({ OrbitControls });\r\n\r\nconst camera = {\r\n  position: new THREE.Vector3(0, 0, 250)\r\n};\r\nconst style = {\r\n  width: 800,\r\n  height: 800\r\n};\r\nconst plain = new THREE.MeshBasicMaterial({\r\n  map: new THREE.TextureLoader().load('images/crate.png')\r\n});\r\nconst untiltable = new THREE.MeshBasicMaterial({\r\n  map: new THREE.TextureLoader().load('images/crate_untiltable.png')\r\n});\r\nconst unstackable = new THREE.MeshBasicMaterial({\r\n  map: new THREE.TextureLoader().load('images/crate_unstackable.png')\r\n});\r\n\r\nlet numberOfHeaviestItemsToPackFromCenter = 15;\r\n\r\nconst getCornerCoordOfItemInBin = (bin, item) => ({\r\n  x: bin.cornerCoord.x + item.l / 2,\r\n  y: bin.cornerCoord.y + item.b / 2,\r\n  z: bin.cornerCoord.z + item.h / 2\r\n});\r\n\r\nconst splitBinByLength = (bin, item) => ({\r\n  x: item.l / 2,\r\n  y: 0,\r\n  z: 0,\r\n  l: bin.l - item.l,\r\n  b: bin.b,\r\n  h: bin.h,\r\n  color: '#CECECE',\r\n  cornerCoord: {\r\n    x: bin.cornerCoord.x + item.l,\r\n    y: bin.cornerCoord.y,\r\n    z: bin.cornerCoord.z\r\n  },\r\n  type: 'l',\r\n  reservedForHeavyItems: bin.reservedForHeavyItems\r\n});\r\n\r\nconst splitBinByHeight = (bin, item) => ({\r\n  x: -bin.l / 2 + item.l / 2,\r\n  y: 0,\r\n  z: item.h / 2,\r\n  l: item.l,\r\n  b: bin.b,\r\n  h: bin.h - item.h,\r\n  color: '#000',\r\n  cornerCoord: {\r\n    x: bin.cornerCoord.x,\r\n    y: bin.cornerCoord.y,\r\n    z: bin.cornerCoord.z + item.h\r\n  },\r\n  type: 'h',\r\n  reservedForHeavyItems: bin.reservedForHeavyItems\r\n});\r\n\r\nconst splitBinByBreadth = (bin, item) => ({\r\n  x: -bin.l / 2 + item.l / 2,\r\n  y: item.b / 2,\r\n  z: -bin.h / 2 + item.h / 2,\r\n  l: item.l,\r\n  b: bin.b - item.b,\r\n  h: item.h,\r\n  color: '#000',\r\n  cornerCoord: {\r\n    x: bin.cornerCoord.x,\r\n    y: bin.cornerCoord.y + item.b,\r\n    z: bin.cornerCoord.z\r\n  },\r\n  type: 'b',\r\n  reservedForHeavyItems: bin.reservedForHeavyItems\r\n});\r\n\r\nconst createSubBins = (bin, item) =>\r\n  [\r\n    splitBinByLength(bin, item),\r\n    splitBinByHeight(bin, item),\r\n    splitBinByBreadth(bin, item)\r\n  ];\r\n\r\nconst theBin = {\r\n  l: 244,\r\n  b: 163,\r\n  h: 163,\r\n  cornerCoord: {\r\n    x: -244 / 2,\r\n    y: -163 / 2,\r\n    z: -163 / 2\r\n  }\r\n};\r\n\r\nconst binsForHeaviestFromMiddle = [{ // left\r\n    x: -244 / 2 + 80 / 2,\r\n    y: 0,\r\n    z: 0,\r\n    l: 80,\r\n    b: 163,\r\n    h: 163,\r\n    cornerCoord: {\r\n      x: -244 / 2,\r\n      y: -163 / 2,\r\n      z: -163 / 2\r\n    },\r\n    color: 'red'\r\n  }, { // middle\r\n    x: 0,\r\n    y: 0,\r\n    z: 0,\r\n    l: 84,\r\n    b: 163,\r\n    h: 83,\r\n    cornerCoord: {\r\n      x: -244 / 2 + 80,\r\n      y: -163 / 2,\r\n      z: -163 / 2 + 40\r\n    },\r\n    color: 'red',\r\n    reservedForHeavyItems: true\r\n  }, { // right\r\n    x: -244 / 2 + 80 / 2 + 80 + 84,\r\n    y: 0,\r\n    z: 0,\r\n    l: 80,\r\n    b: 163,\r\n    h: 163,\r\n    cornerCoord: {\r\n      x: -244 / 2 + 80 + 84,\r\n      y: -163 / 2,\r\n      z: -163 / 2\r\n    },\r\n    color: 'red'\r\n  }, { // back\r\n    x: 0,\r\n    y: 0,\r\n    z: -163 / 2 + 40 / 2,\r\n    l: 84,\r\n    b: 163,\r\n    h: 40,\r\n    cornerCoord: {\r\n      x: -244 / 2 + 80,\r\n      y: -163 / 2,\r\n      z: -163 / 2\r\n    },\r\n    color: 'red'\r\n  }, { // front\r\n    x: 0,\r\n    y: 0,\r\n    z: 163 / 2 - 40 / 2,\r\n    l: 84,\r\n    b: 163,\r\n    h: 40,\r\n    cornerCoord: {\r\n      x: -244 / 2 + 80,\r\n      y: -163 / 2,\r\n      z: -163 / 2 + 40 + 83\r\n    },\r\n    color: 'red'\r\n  }];\r\n\r\nconst createInitialBins = strategy => {\r\n  if (strategy === 1) { // heaviest from middle\r\n    return binsForHeaviestFromMiddle;\r\n  }\r\n  else {\r\n    numberOfHeaviestItemsToPackFromCenter = -1;\r\n    return [{\r\n      l: 244,\r\n      b: 163,\r\n      h: 163,\r\n      cornerCoord: {\r\n        x: -244 / 2,\r\n        y: -163 / 2,\r\n        z: -163 / 2\r\n      }\r\n    }];\r\n  }\r\n};\r\n\r\nlet bins = createInitialBins(1);\r\nwindow.bins = bins;\r\n\r\nlet items = [{\r\n  l: 40,\r\n  b: 45,\r\n  h: 46\r\n}];\r\n\r\nconst spinItem = (item, axis = 1) => {\r\n  let tmp;\r\n\r\n  unspinItem(item);\r\n\r\n  if (axis === 1) {\r\n    tmp = item.l;\r\n    item.l = item.b;\r\n    item.b = tmp;\r\n  }\r\n  else if (axis === 2) {\r\n    tmp = item.b;\r\n    item.b = item.h;\r\n    item.h = tmp;\r\n  }\r\n  else if (axis === 3) {\r\n    tmp = item.l;\r\n    item.l = item.h;\r\n    item.h = tmp;\r\n  }\r\n\r\n  item.axis = axis;\r\n};\r\n\r\nconst unspinItem = item => {\r\n  let tmp;\r\n\r\n  if (item.axis === 1) {\r\n    tmp = item.l;\r\n    item.l = item.b;\r\n    item.b = tmp;\r\n  }\r\n  else if (item.axis === 2) {\r\n    tmp = item.b;\r\n    item.b = item.h;\r\n    item.h = tmp;\r\n  }\r\n  else if (item.axis === 3) {\r\n    tmp = item.l;\r\n    item.l = item.h;\r\n    item.h = tmp;\r\n  }\r\n\r\n  item.axis = 0;\r\n};\r\n\r\nconst doesItemFitInBin = (bin, item) =>\r\n  item.l <= bin.l && item.b <= bin.b && item.h <= bin.h;\r\n\r\nconst pack = items => {\r\n  for (let i = 0; i < items.length; i++) {\r\n    const item = items[i];\r\n\r\n    for (let j = 0; j < bins.length; j++) {\r\n      const bin = bins[j];\r\n      \r\n      if (item.packed) break;\r\n      if (!bin) continue;\r\n\r\n      if (numberOfHeaviestItemsToPackFromCenter !== -1) {\r\n        if (\r\n          i <= numberOfHeaviestItemsToPackFromCenter &&\r\n          //!items.filter(_ => !_.packed && _.heavy).length === 0 ||\r\n          (bin.reservedForHeavyItems && !item.heavy) ||\r\n          (!bin.reservedForHeavyItems && item.heavy)\r\n        ) continue;\r\n      }\r\n\r\n      console.log('Attempt to fit item ' + item.id + ' into bin ' + j + ' ' + bin.type);\r\n\r\n      if (doesItemFitInBin(bin, item)) {\r\n        console.log('succeeded');\r\n        packItem(bin, j, item);\r\n      }\r\n      else if (item.spinnable) {\r\n        console.log('failed, trying with spin 1');\r\n        spinItem(item, 1);\r\n\r\n        if (doesItemFitInBin(bin, item)) {\r\n          console.log('succeeded');\r\n          packItem(bin, j, item);\r\n        }\r\n\r\n        else {\r\n          console.log('failed, trying with spin 2');\r\n          spinItem(item, 2);\r\n\r\n          if (doesItemFitInBin(bin, item)) {\r\n            console.log('succeeded');\r\n            packItem(bin, j, item);\r\n          }\r\n          else {\r\n            console.log('failed, trying with spin 3');\r\n            spinItem(item, 3);\r\n\r\n            if (doesItemFitInBin(bin, item)) {\r\n              console.log('succeeded');\r\n              packItem(bin, j, item);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  bins = filterAndSortBins(bins);\r\n  window.bins = bins;\r\n\r\n  return {\r\n    bins,\r\n    items\r\n  };\r\n};\r\n\r\n\r\nconst packItem = (bin, binIndex, item) => {\r\n  const _  = getCornerCoordOfItemInBin(bin, item);\r\n\r\n  bins.push(...createSubBins(bin, item));\r\n  bins[binIndex] = null;\r\n\r\n  item.x = _.x;\r\n  item.y = _.y;\r\n  item.z = _.z;\r\n  item.packed = true;\r\n};\r\n\r\nconst filterAndSortBins = bins =>\r\n  bins\r\n  .filter(bin => bin && bin.l !== 0 && bin.b !== 0 && bin.h !== 0)\r\n  .sort((a, b) => {\r\n    if (a.type === 'l') return -1;\r\n    if (a.type === 'h') {\r\n      if (b.type === 'b') return -1;\r\n      return 1;\r\n    }\r\n    if (a.type === 'b') return 1;\r\n  });\r\n\r\nconst sortItemsByVolume = items => items.sort((a, b) => {\r\n  if (a.unstackable && !b.unstackable)\r\n    return 1;\r\n  if (b.unstackable && !a.unstackable)\r\n    return -1;\r\n  if ((a.l * a.b * a.h) > (b.l * b.b * b.h))\r\n    return -1\r\n  return 1;\r\n});\r\n\r\nconst putNHeaviestItemsFirst = (items, n = numberOfHeaviestItemsToPackFromCenter) => {\r\n  if (numberOfHeaviestItemsToPackFromCenter === -1) return items;\r\n\r\n  const copy = items.map((item, index) => ({ item, index }));\r\n\r\n  // TODO: handle heaviest but not stackable\r\n  copy.sort((a, b) => {\r\n    if (a.item.unstackable) {\r\n      return 1;\r\n    }\r\n    if (a.item.weight > b.item.weight)\r\n      return -1;\r\n    return 1;\r\n  });\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    items[copy[i].index] = null;\r\n  }\r\n\r\n  return copy.map(_ => ({ ..._.item, heavy: true })).slice(0, n).concat(items.filter(_ => _));\r\n};\r\n\r\nconst ULDScene = ({ uld, dimensions, items = [], subBins }) => {\r\n  const { camera, gl } = useThree();\r\n\r\n  return (\r\n    <Fragment>\r\n      <orbitControls args={[camera, gl.domElement]} enableDamping />\r\n      <group>\r\n        {uld.contour.faces.map(face =>\r\n          <line>\r\n            <geometry\r\n              attach='geometry'\r\n              vertices={face.points.map(point => new THREE.Vector3(point.x, point.y, point.z))}\r\n            />\r\n            <lineBasicMaterial attach='material' color='#8A8A8A' />\r\n          </line>)}\r\n      </group>\r\n      {(subBins || []).map(subBin => {\r\n        return (\r\n          <mesh position={[subBin.x, subBin.y, subBin.z]} color='#CECECE'>         \r\n            <boxBufferGeometry\r\n              attach='geometry'\r\n              args={[subBin.l, subBin.b, subBin.h]}\r\n            />\r\n          </mesh>\r\n        );\r\n      })}\r\n      {items.map(item => {\r\n        const material = item.myRotationConstraints === 7\r\n          ? untiltable\r\n          : item.myPositionConstraints === 2\r\n            ? unstackable\r\n            : plain;\r\n\r\n        return (\r\n          <mesh\r\n            position={[item.x, item.y, item.z]}\r\n            material={material}\r\n            onClick={e => alert(item.id)}\r\n          >         \r\n            <boxBufferGeometry\r\n              attach='geometry'\r\n              args={[item.l, item.b, item.h]}\r\n            />\r\n            {item.heavy && <meshBasicMaterial attach='material' color='red' />}\r\n            {item.unstackable && <meshBasicMaterial attach='material' color='blue' />}\r\n          </mesh>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nitems = pack(items).items;\r\n\r\n/*let newItems = [\r\n  {\"id\":12,\"l\":40,\"b\":37,\"h\":38,\"weight\":17.512055393515897},\r\n  {\"id\":96,\"l\":36,\"b\":38,\"h\":39,\"weight\":26.703374934395853, unstackable: true},\r\n  {\"id\":21,\"l\":36,\"b\":37,\"h\":39,\"weight\":22.691877999126895, unstackable: true},\r\n  {\"id\":35,\"l\":32,\"b\":39,\"h\":38,\"weight\":7.076429841596443, unstackable: true},\r\n  {\"id\":7,\"l\":32,\"b\":37,\"h\":37,\"weight\":25.01681973005458, unstackable: true},\r\n  {\"id\":66,\"l\":37,\"b\":32,\"h\":37,\"weight\":16.93326049314387, unstackable: true},\r\n  {\"id\":6,\"l\":25,\"b\":21,\"h\":21,\"weight\":12.980079999287524, unstackable: true},\r\n  {\"id\":60,\"l\":27,\"b\":21,\"h\":22,\"weight\":13.71305998672768, unstackable: true},\r\n  {\"id\":41,\"l\":27,\"b\":23,\"h\":21,\"weight\":19.971004273977485, unstackable: true},\r\n  {\"id\":45,\"l\":27,\"b\":24,\"h\":22,\"weight\":15.690667821632571, unstackable: true},\r\n  {\"id\":8,\"l\":27,\"b\":21,\"h\":26,\"weight\":3.741435966054032, unstackable: true},{\"id\":61,\"l\":23,\"b\":26,\"h\":25,\"weight\":18.571232311441438},{\"id\":89,\"l\":21,\"b\":35,\"h\":21,\"weight\":3.8835760272165976},{\"id\":39,\"l\":21,\"b\":24,\"h\":31,\"weight\":18.14821319246191},{\"id\":11,\"l\":26,\"b\":28,\"h\":23,\"weight\":5.91564583675988},{\"id\":38,\"l\":27,\"b\":21,\"h\":30,\"weight\":14.592157825059067},{\"id\":50,\"l\":21,\"b\":22,\"h\":38,\"weight\":29.715900582492797,\"heavy\":true},{\"id\":69,\"l\":32,\"b\":24,\"h\":23,\"weight\":17.12318864349656},{\"id\":64,\"l\":31,\"b\":25,\"h\":23,\"weight\":28.424008716024396,\"heavy\":true},{\"id\":5,\"l\":21,\"b\":25,\"h\":34,\"weight\":25.969313393902155},{\"id\":27,\"l\":36,\"b\":21,\"h\":24,\"weight\":20.262957384215298},{\"id\":90,\"l\":23,\"b\":21,\"h\":38,\"weight\":18.55234432630118},{\"id\":92,\"l\":22,\"b\":28,\"h\":30,\"weight\":9.171915053595391},{\"id\":47,\"l\":30,\"b\":22,\"h\":28,\"weight\":16.697730285722074},{\"id\":58,\"l\":22,\"b\":39,\"h\":22,\"weight\":13.47099258257317},{\"id\":73,\"l\":23,\"b\":38,\"h\":22,\"weight\":4.038086801856224},{\"id\":19,\"l\":25,\"b\":35,\"h\":22,\"weight\":14.474375699587071},{\"id\":63,\"l\":28,\"b\":28,\"h\":25,\"weight\":23.184998954408425},{\"id\":18,\"l\":28,\"b\":32,\"h\":22,\"weight\":11.364336818339147},{\"id\":70,\"l\":25,\"b\":25,\"h\":32,\"weight\":14.57784845840147},{\"id\":97,\"l\":23,\"b\":22,\"h\":40,\"weight\":3.2404087035059748},{\"id\":0,\"l\":22,\"b\":26,\"h\":36,\"weight\":16.093665484613155},{\"id\":20,\"l\":32,\"b\":28,\"h\":23,\"weight\":6.105939599542991},{\"id\":94,\"l\":27,\"b\":35,\"h\":22,\"weight\":4.415246868746678},{\"id\":9,\"l\":27,\"b\":23,\"h\":34,\"weight\":1.946753195940969},{\"id\":93,\"l\":31,\"b\":22,\"h\":32,\"weight\":21.50995442856736},{\"id\":2,\"l\":27,\"b\":27,\"h\":30,\"weight\":17.667366202642995},{\"id\":71,\"l\":27,\"b\":33,\"h\":25,\"weight\":15.75517438921587},{\"id\":76,\"l\":21,\"b\":28,\"h\":38,\"weight\":7.429303206362379},{\"id\":49,\"l\":24,\"b\":24,\"h\":39,\"weight\":11.478326197037989},{\"id\":78,\"l\":22,\"b\":38,\"h\":27,\"weight\":18.455676524076893},{\"id\":88,\"l\":26,\"b\":35,\"h\":25,\"weight\":0.9699530053335081},{\"id\":33,\"l\":34,\"b\":21,\"h\":32,\"weight\":24.239957400704938},{\"id\":86,\"l\":25,\"b\":23,\"h\":40,\"weight\":18.09549907898296},{\"id\":4,\"l\":37,\"b\":24,\"h\":26,\"weight\":9.487921863035343},{\"id\":81,\"l\":25,\"b\":30,\"h\":31,\"weight\":9.139865840818096},{\"id\":43,\"l\":30,\"b\":26,\"h\":30,\"weight\":24.26232930816665},{\"id\":68,\"l\":28,\"b\":35,\"h\":24,\"weight\":9.005780799160242},{\"id\":84,\"l\":37,\"b\":22,\"h\":29,\"weight\":0.6178611192579386},{\"id\":77,\"l\":32,\"b\":34,\"h\":22,\"weight\":18.64229377819448},{\"id\":53,\"l\":35,\"b\":30,\"h\":23,\"weight\":26.496847353834493},{\"id\":56,\"l\":33,\"b\":31,\"h\":24,\"weight\":29.59836014297159,\"heavy\":true},{\"id\":74,\"l\":30,\"b\":35,\"h\":24,\"weight\":8.960694713923294},{\"id\":28,\"l\":34,\"b\":34,\"h\":22,\"weight\":15.369934327427465},{\"id\":3,\"l\":34,\"b\":27,\"h\":28,\"weight\":18.701171432157967},{\"id\":30,\"l\":37,\"b\":28,\"h\":25,\"weight\":15.077440069070096},{\"id\":46,\"l\":40,\"b\":24,\"h\":27,\"weight\":3.6163665769692144},{\"id\":67,\"l\":35,\"b\":24,\"h\":31,\"weight\":7.771779026714247},{\"id\":24,\"l\":35,\"b\":24,\"h\":31,\"weight\":25.270931113697404},{\"id\":23,\"l\":31,\"b\":30,\"h\":29,\"weight\":26.11981924304361},{\"id\":40,\"l\":39,\"b\":24,\"h\":29,\"weight\":0.16539321499317472},{\"id\":95,\"l\":35,\"b\":29,\"h\":27,\"weight\":17.64554744051333},{\"id\":42,\"l\":25,\"b\":38,\"h\":29,\"weight\":12.175004168843515},{\"id\":14,\"l\":28,\"b\":38,\"h\":26,\"weight\":11.61484399237407},{\"id\":65,\"l\":36,\"b\":37,\"h\":21,\"weight\":19.21840474585028},{\"id\":57,\"l\":27,\"b\":37,\"h\":28,\"weight\":26.63980839091846},{\"id\":16,\"l\":28,\"b\":35,\"h\":29,\"weight\":9.483466791065275},{\"id\":1,\"l\":33,\"b\":32,\"h\":27,\"weight\":10.8357904803525},{\"id\":37,\"l\":25,\"b\":36,\"h\":32,\"weight\":28.51016057956189,\"heavy\":true},{\"id\":79,\"l\":33,\"b\":34,\"h\":26,\"weight\":0.5838271763078984},{\"id\":83,\"l\":36,\"b\":22,\"h\":37,\"weight\":3.056265603933983},{\"id\":51,\"l\":33,\"b\":34,\"h\":28,\"weight\":26.309137613438892},{\"id\":85,\"l\":31,\"b\":32,\"h\":32,\"weight\":14.350839133465891},{\"id\":98,\"l\":30,\"b\":37,\"h\":29,\"weight\":11.61732623812642},{\"id\":82,\"l\":35,\"b\":40,\"h\":23,\"weight\":23.706833725894324},{\"id\":72,\"l\":29,\"b\":29,\"h\":39,\"weight\":29.30913974926043,\"heavy\":true},{\"id\":91,\"l\":29,\"b\":30,\"h\":38,\"weight\":3.5865122975081265},{\"id\":52,\"l\":35,\"b\":26,\"h\":37,\"weight\":4.839286663491098},{\"id\":13,\"l\":37,\"b\":24,\"h\":38,\"weight\":17.657981490529153},{\"id\":75,\"l\":32,\"b\":36,\"h\":30,\"weight\":8.687703545766501},{\"id\":55,\"l\":36,\"b\":37,\"h\":26,\"weight\":22.48762302159906},{\"id\":99,\"l\":38,\"b\":38,\"h\":24,\"weight\":19.741663999555584},{\"id\":31,\"l\":32,\"b\":35,\"h\":31,\"weight\":13.00040714591772},{\"id\":36,\"l\":28,\"b\":40,\"h\":31,\"weight\":25.949981233693073},{\"id\":87,\"l\":32,\"b\":34,\"h\":32,\"weight\":15.374188710865752},{\"id\":32,\"l\":25,\"b\":38,\"h\":37,\"weight\":20.074620049181867},{\"id\":54,\"l\":34,\"b\":26,\"h\":40,\"weight\":19.532050152956128},{\"id\":48,\"l\":40,\"b\":36,\"h\":25,\"weight\":13.67986502429352},{\"id\":22,\"l\":40,\"b\":36,\"h\":25,\"weight\":27.222715994183154,\"heavy\":true},{\"id\":25,\"l\":37,\"b\":39,\"h\":26,\"weight\":9.020129036788646},{\"id\":59,\"l\":37,\"b\":40,\"h\":26,\"weight\":26.608004530686173},{\"id\":34,\"l\":37,\"b\":29,\"h\":36,\"weight\":9.62276092234049},{\"id\":15,\"l\":25,\"b\":40,\"h\":39,\"weight\":13.605066733913336},{\"id\":62,\"l\":33,\"b\":37,\"h\":32,\"weight\":6.350320915044552},{\"id\":44,\"l\":38,\"b\":39,\"h\":27,\"weight\":10.825609761402571},{\"id\":29,\"l\":38,\"b\":32,\"h\":33,\"weight\":27.38340114782676,\"heavy\":true},{\"id\":17,\"l\":30,\"b\":34,\"h\":40,\"weight\":11.063160950866195},{\"id\":10,\"l\":38,\"b\":32,\"h\":34,\"weight\":28.055240502714952,\"heavy\":true},{\"id\":80,\"l\":34,\"b\":40,\"h\":32,\"weight\":8.298644465320608},{\"id\":26,\"l\":31,\"b\":36,\"h\":39,\"weight\":27.157963021699658,\"heavy\":true}];\r\n\r\nnewItems.forEach(_ => _.spinnable = true);*/\r\n\r\n\r\nlet newItems = require('./input1/json');\r\n\r\n/*let newItems = Array(100).fill(true).map((_, id) => {\r\n  const d = Math.ceil(Math.random() * 30)\r\n  return {\r\n    id,\r\n    l: Math.ceil(Math.random() * 10) + 30,\r\n    b: Math.ceil(Math.random() * 10) + 30,\r\n    h: Math.ceil(Math.random() * 10) + 30,\r\n    weight: Math.random() * 30,\r\n    spinnable: true,\r\n    unstackable: Math.floor(Math.random() * 6) === 0\r\n  }\r\n});*/\r\n\r\n/*let newItems = Array(100).fill(true).map((_, id) => {\r\n  const d = Math.ceil(Math.random() * 20) + 20\r\n  return {\r\n    id,\r\n    l: d,\r\n    b: d,\r\n    h: d,\r\n    weight: Math.random() * 30,\r\n    spinnable: true\r\n  }\r\n});*/\r\n\r\nwindow.newItems = newItems;\r\n\r\n/*newItems.sort((a, b) => a.weight < b.weight ? 1 : -1)\r\n  .forEach((item, i) => {\r\n    if (i < 5) {\r\n      item.heavy = true;\r\n    }\r\n  });*/\r\n\r\nsortItemsByVolume(newItems);\r\n\r\ndebugger;\r\n\r\nnewItems = putNHeaviestItemsFirst(newItems);\r\n\r\nnewItems.reverse();\r\n\r\ndebugger;\r\n\r\n//newItems[94] = {\"id\":66,\"l\":37,\"b\":10,\"h\":50,\"weight\":16.93326049314387};\r\n\r\n/*const newItems = sortItemsByVolume(Array(200).fill(true).map(() => ({\r\n  l: Math.random() * 50,\r\n  b: Math.random() * 50,\r\n  h: Math.random() * 50,\r\n})));*/\r\n\r\n\r\nexport default () => {\r\n  const [ulds, setUlds]  = useState([]);\r\n  /*useEffect(() => {\r\n\t  debugger;\r\n    fetch('http://localhost:8080/pack', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(d)\r\n    }).then(data => {\r\n      data.json().then(data => setUlds(data))\r\n    });\r\n  }, []);*/\r\n\r\n  /*const subBins = [{\r\n    x: -122 + 40 + (244 - 40) / 2,\r\n    y: -81.5 + 45 / 2,\r\n    z: -81.5 + 163 / 2,\r\n    l: 244 - 40,\r\n    b: 45,\r\n    h: 163\r\n  }];*/\r\n  const [_items, setItems] = useState(items);\r\n\r\n  const addItem = () => {\r\n    const nextItem = newItems.pop();\r\n\r\n    if (nextItem) {\r\n      let result = pack(items.concat(nextItem));\r\n\r\n      console.dir(result.items);\r\n\r\n      items = result.items;\r\n\r\n      setItems(result.items);\r\n\r\n      if (newItems.length > 0) {\r\n        setTimeout(addItem, 100);\r\n      }\r\n      /*else while (items.filter(_ => !_.packed).length !== 0) {debugger;\r\n        result = pack(items);\r\n        items = result.items;\r\n      }*/\r\n    }\r\n  }\r\n\r\n  const packedItems = _items.filter(_ => _.packed);\r\n\r\n  return (\r\n    <>\r\n      {/*<div>\r\n        {(ulds || []).reduce((acc, uld) => acc + uld.items.length, 0)}\r\n      </div>*/}\r\n      <div>\r\n        Bins: {bins.length}\r\n        Pack status: {packedItems.length} / {_items.length}\r\n        {' '}Occupancy: {packedItems.reduce((acc, i ) => acc + (i.l * i.b * i.h), 0) / (244 * 163 * 163) * 100}\r\n      </div>\r\n      {shape.map(uld =>\r\n        <Canvas style={style} camera={camera}>\r\n          <ULDScene uld={uld} items={_items} subBins={[]/*binsForHeaviestFromMiddle *//*[\r\n      splitBinByLength(theBin, items[0]),\r\n      splitBinByBreadth(theBin, items[0]),\r\n      splitBinByHeight(theBin, items[0])\r\n  ]*/} />\r\n        </Canvas>)}\r\n      <button onClick={addItem}>Pack</button>\r\n    </>\r\n  );\r\n};\r\n\r\n/*const splitBinByLength = (bin, item) => {\r\n  return {\r\n    x: -bin.l / 2 + item.l + (bin.l - item.l) / 2,\r\n    y: -bin.b / 2 + item.b / 2,\r\n    z: -bin.h / 2 + bin.h / 2,\r\n    l: bin.l - item.l,\r\n    b: item.b,\r\n    h: bin.h,\r\n    color: '#CECECE'\r\n  };\r\n};*/\r\n"]},"metadata":{},"sourceType":"module"}